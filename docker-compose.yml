version: "3.9"
services:

  postgres14:
    container_name: postgres14
    image: postgres:14-alpine
    ports:
      - "5532:5432"
    environment:
      POSTGRES_PASSWORD: '12345'
      POSTGRES_DB: microserviciosdb
    volumes:
      - data-postgres:/var/lib/postgresql/data
    restart: always
    networks:
      - spring

  employee-service:
    container_name: employee-service
    image: ////////
#    build:
#      context: ./
#      dockerfile: ./msvc-usuarios/Dockerfile
    ports:
      - "8001:8001"
    environment:
      PORT: 8001
      DB_HOST: postgres14:5432
      DB_DATABASE: microserviciosdb
      DB_USERNAME: postgres
      DB_PASSWORD: '12345'
      LAPTOP_URL: laptop-service:8002
      SMARTPHONE_URL: smartphone-service:8002
    networks:
      - spring
    depends_on:
      - postgres14
    restart: always

  laptop-service:
    container_name: laptop-service
    image: //////
#    build:
#      context: ./
#      dockerfile: ./msvc-cursos/Dockerfile
    ports:
      - "8002:8002"
    environment:
      PORT: 8002
      DB_HOST: postgres14:5432
      DB_DATABASE: microserviciosdb
      DB_USERNAME: postgres
      DB_PASSWORD: '12345'
      EMPLOYEE_URL: employee-service:8001
      SMARTPHONE_URL: smartphone-service:8003
    networks:
      - spring
    depends_on:
      - postgres14
      - employee-service
    restart: always

  smartphone-service:
    container_name: smartphone-service
    image: //////
#    build:
#      context: ./
#      dockerfile: ./msvc-cursos/Dockerfile
    ports:
      - "8003:8003"
    environment:
      PORT: 8003
      DB_HOST: postgres14:5432
      DB_DATABASE: microserviciosdb
      DB_USERNAME: postgres
      DB_PASSWORD: '12345'
      EMPLOYEE_URL: employee-service:8001
      LAPTOP_URL: laptop-service:8002
    networks:
      - spring
    depends_on:
      - postgres14
      - employee-service
    restart: always

volumes:
  data-postgres:
    name: data-postgres

networks:
  spring:
    name: spring

  jaeger-all-in-one:
    image: jaegertracing/all-in-one:latest
    ports:
      - "16686:16686"
      - "14268:14268"
      - "14250:14250"

  otel-collector:
    image: otel/opentelemetry-collector:0.47.0
    command: [ "--config=/etc/otel-collector-config.yaml" ]
    volumes:
      - ./otel-config.yaml:/etc/otel-collector-config.yaml
    ports:
      - "1888:1888"   # pprof extension
      - "13133:13133" # health_check extension
      - "4317:4317"   # OTLP gRPC receiver
    depends_on:
      - jaeger-all-in-one

